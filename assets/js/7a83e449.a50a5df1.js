"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2298],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return d}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),f=u(t),d=o,m=f["".concat(c,".").concat(d)]||f[d]||p[d]||i;return t?r.createElement(m,a(a({ref:n},s),{},{components:t})):r.createElement(m,a({ref:n},s))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=f;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var u=2;u<i;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},1542:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return a},default:function(){return p},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return u}});var r=t(3117),o=(t(7294),t(3905));const i={id:"recipes-form",title:"Form recipe",sidebar_label:"Form"},a=void 0,l={unversionedId:"recipes/recipes-form",id:"version-3.0.x/recipes/recipes-form",title:"Form recipe",description:"To handle fullscreen form, just follow steps from module usage section",source:"@site/versioned_docs/version-3.0.x/recipes/FORM.mdx",sourceDirName:"recipes",slug:"/recipes/recipes-form",permalink:"/react-native-avoid-softinput/docs/recipes/recipes-form",draft:!1,editUrl:"https://github.com/mateusz1913/react-native-avoid-softinput/tree/main/docs/versioned_docs/version-3.0.x/recipes/FORM.mdx",tags:[],version:"3.0.x",frontMatter:{id:"recipes-form",title:"Form recipe",sidebar_label:"Form"},sidebar:"docsSidebar",previous:{title:"Alternatives",permalink:"/react-native-avoid-softinput/docs/guides/alternatives"},next:{title:"Modal",permalink:"/react-native-avoid-softinput/docs/recipes/recipes-modal"}},c={},u=[{value:"Example",id:"example",level:3}],s={toc:u};function p(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"To handle fullscreen form, just follow steps from ",(0,o.kt)("a",{parentName:"p",href:"../guides/usage-module"},"module usage")," section"),(0,o.kt)("h3",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'export const FormExample: React.FC = () => {\n  /**\n   * If you use react-navigation and want to enable module only in specific screen,\n   * you can call it in react-navigation `useFocusEffect` callback\n   *\n   * If you want to have module always enabled,\n   * just call it inside `useEffect` in your root component\n   *\n   * ```\n   * useEffect(() => {\n   *   AvoidSoftInput.setShouldMimicIOSBehavior(true); // <---- Tell Android that library will handle keyboard insets manually to match iOS behavior\n   *   AvoidSoftInput.setEnabled(true); // <---- Enable module\n   * }, [])\n   * ```\n   */\n  const onFocusEffect = useCallback(() => {\n    AvoidSoftInput.setShouldMimicIOSBehavior(true); // <---- Tell Android that library will handle keyboard insets manually to match iOS behavior\n    AvoidSoftInput.setEnabled(true); // <---- Enable module\n    return () => {\n      AvoidSoftInput.setEnabled(false);\n      AvoidSoftInput.setShouldMimicIOSBehavior(false);\n    };\n  }, []);\n\n  useFocusEffect(onFocusEffect);\n\n  /** Sample form */\n  return (\n    <SafeAreaView>\n      <ScrollView>\n        <View>\n          <Image />\n        </View>\n        <View>\n          <TextInput placeholder="Single line input" />\n          <TextInput placeholder="Multiline input" />\n          <TextInput placeholder="Large multiline input" />\n        </View>\n        <View>\n          <Button />\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n')))}p.isMDXComponent=!0}}]);