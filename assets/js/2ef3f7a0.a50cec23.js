"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4140],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),u=r,f=d["".concat(l,".").concat(u)]||d[u]||m[u]||a;return n?o.createElement(f,i(i({ref:t},p),{},{components:n})):o.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6083:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var o=n(7462),r=(n(7294),n(3905));const a={id:"recipes-modal",title:"Modal recipe",sidebar_label:"Modal",keywords:["react-native-avoid-softinput","modal","recipe"]},i=void 0,s={unversionedId:"recipes/recipes-modal",id:"recipes/recipes-modal",title:"Modal recipe",description:"To handle forms inside React Native Modal components, check the example modal form.",source:"@site/docs/recipes/MODAL.mdx",sourceDirName:"recipes",slug:"/recipes/recipes-modal",permalink:"/react-native-avoid-softinput/docs/next/recipes/recipes-modal",draft:!1,editUrl:"https://github.com/mateusz1913/react-native-avoid-softinput/tree/main/docs/docs/recipes/MODAL.mdx",tags:[],version:"current",frontMatter:{id:"recipes-modal",title:"Modal recipe",sidebar_label:"Modal",keywords:["react-native-avoid-softinput","modal","recipe"]},sidebar:"docsSidebar",previous:{title:"Form",permalink:"/react-native-avoid-softinput/docs/next/recipes/recipes-form"},next:{title:"Bottom sheet",permalink:"/react-native-avoid-softinput/docs/next/recipes/recipes-bottom-sheet"}},l={},c=[],p={toc:c};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"To handle forms inside React Native ",(0,r.kt)("a",{parentName:"p",href:"https://reactnative.dev/docs/modal"},(0,r.kt)("inlineCode",{parentName:"a"},"Modal"))," components, check ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/mateusz1913/react-native-avoid-softinput/blob/main/packages/app/src/screens/ModalExample.tsx"},"the example modal form"),"."),(0,r.kt)("p",null,"This is the case, where a simple form is placed inside a modal.\nWhen the keyboard is visible, the only tasks are to push the input (if needed) above the keyboard and make the submit button visible, when scrolling to the bottom."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="packages/app/src/screens/ModalExample.tsx"',title:'"packages/app/src/screens/ModalExample.tsx"'},"import { useFocusEffect } from '@react-navigation/native';\nimport * as React from 'react';\nimport { Image, Modal, ScrollView, StyleSheet, View } from 'react-native';\nimport { AvoidSoftInput, AvoidSoftInputView } from 'react-native-avoid-softinput';\nimport { SafeAreaView } from 'react-native-safe-area-context';\n\nimport Button from '../components/Button';\nimport CloseButton from '../components/CloseButton';\nimport MultilineInput from '../components/MultilineInput';\nimport SingleInput from '../components/SingleInput';\nimport { styles as commonStyles } from '../consts/styles';\n\nconst icon = require('../../assets/AppIconTransparent.png');\n\nexport const ModalExample: React.FC = () => {\n  const [ modalVisible, setModalVisible ] = React.useState(false);\n\n  const onFocusEffect = React.useCallback(() => {\n    AvoidSoftInput.setShouldMimicIOSBehavior(true);\n    return () => {\n      AvoidSoftInput.setShouldMimicIOSBehavior(false);\n    };\n  }, []);\n\n  useFocusEffect(onFocusEffect);\n\n  function closeModal() {\n    setModalVisible(false);\n  }\n\n  function openModal() {\n    setModalVisible(true);\n  }\n\n  return <SafeAreaView edges={[ 'left', 'right' ]} style={commonStyles.screenContainer}>\n    <Button\n      onPress={openModal}\n      title=\"Open modal\"\n    />\n    <Modal\n      animationType=\"slide\"\n      onRequestClose={closeModal}\n      statusBarTranslucent={true}\n      style={styles.modal}\n      supportedOrientations={[ 'landscape', 'portrait' ]}\n      transparent={true}\n      visible={modalVisible}\n    >\n      <SafeAreaView edges={[ 'left', 'right', 'bottom' ]} style={styles.modalContent}>\n        <View style={styles.container}>\n          <View style={styles.closeContainer}>\n            <CloseButton onPress={closeModal} />\n          </View>\n          <AvoidSoftInputView style={commonStyles.stretch}>\n            <ScrollView\n              bounces={false}\n              contentContainerStyle={commonStyles.scrollContainer}\n              contentInsetAdjustmentBehavior=\"always\"\n              overScrollMode=\"always\"\n              showsVerticalScrollIndicator={true}\n              style={commonStyles.stretch}\n            >\n              <View style={styles.logoContainer}>\n                <Image\n                  resizeMode=\"contain\"\n                  source={icon}\n                  style={styles.logo}\n                />\n              </View>\n              <View style={styles.formContainer}>\n                <SingleInput placeholder=\"Single line\" />\n                <MultilineInput placeholder=\"Multiline\" />\n                <Button\n                  onPress={closeModal}\n                  title=\"Submit\"\n                />\n              </View>\n            </ScrollView>\n          </AvoidSoftInputView>\n        </View>\n      </SafeAreaView>\n    </Modal>\n  </SafeAreaView>;\n};\n\nconst styles = StyleSheet.create({\n  closeContainer: {\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    zIndex: 999,\n  },\n  container: {\n    alignItems: 'center',\n    alignSelf: 'stretch',\n    backgroundColor: 'white',\n    borderColor: 'black',\n    borderRadius: 10,\n    borderWidth: 1,\n    marginBottom: 80,\n    marginHorizontal: 10,\n    marginTop: 60,\n    overflow: 'hidden',\n  },\n  formContainer: {\n    alignItems: 'center',\n    alignSelf: 'stretch',\n    justifyContent: 'center',\n    marginBottom: 80,\n    marginHorizontal: 10,\n  },\n  logo: {\n    height: 200,\n    width: 200,\n  },\n  logoContainer: {\n    alignItems: 'center',\n    alignSelf: 'stretch',\n    flex: 1,\n    justifyContent: 'center',\n    paddingVertical: 100,\n  },\n  modal: {\n    alignSelf: 'stretch',\n  },\n  modalContent: {\n    alignSelf: 'stretch',\n    backgroundColor: '#00000033',\n    flex: 1,\n  },\n});\n")))}d.isMDXComponent=!0}}]);