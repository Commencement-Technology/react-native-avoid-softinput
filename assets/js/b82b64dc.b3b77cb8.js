"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1152],{255:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>r,contentTitle:()=>a,default:()=>p,frontMatter:()=>n,metadata:()=>d,toc:()=>l});var o=s(4848),i=s(8453);const n={id:"set-avoid-offset",title:"setAvoidOffset",sidebar_label:"setAvoidOffset"},a=void 0,d={id:"api/module/set-avoid-offset",title:"setAvoidOffset",description:"Use setAvoidOffset method, if you want to increase/decrease amount of translation/padding applied to react root view/scroll view.",source:"@site/versioned_docs/version-2.0.x/api/module/SET_AVOID_OFFSET.mdx",sourceDirName:"api/module",slug:"/api/module/set-avoid-offset",permalink:"/react-native-avoid-softinput/docs/2.0.x/api/module/set-avoid-offset",draft:!1,unlisted:!1,editUrl:"https://github.com/mateusz1913/react-native-avoid-softinput/tree/main/docs/versioned_docs/version-2.0.x/api/module/SET_AVOID_OFFSET.mdx",tags:[],version:"2.0.x",frontMatter:{id:"set-avoid-offset",title:"setAvoidOffset",sidebar_label:"setAvoidOffset"},sidebar:"docsSidebar",previous:{title:"setEnabled",permalink:"/react-native-avoid-softinput/docs/2.0.x/api/module/set-enabled"},next:{title:"setEasing",permalink:"/react-native-avoid-softinput/docs/2.0.x/api/module/set-easing"}},r={},l=[{value:"Parameters",id:"parameters",level:3},{value:"Example",id:"example",level:3}];function c(e){const t={admonition:"admonition",code:"code",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["Use ",(0,o.jsx)(t.code,{children:"setAvoidOffset"})," method, if you want to increase/decrease amount of translation/padding applied to react root view/scroll view."]}),"\n",(0,o.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{children:"Type"}),(0,o.jsx)(t.th,{children:"Required"}),(0,o.jsx)(t.th,{children:"Description"})]})}),(0,o.jsx)(t.tbody,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"number"}),(0,o.jsx)(t.td,{children:"yes"}),(0,o.jsx)(t.td,{children:"additional offset added to react root view/scroll view"})]})})]}),"\n",(0,o.jsx)(t.h3,{id:"example",children:"Example"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",children:'import { AvoidSoftInput } from "react-native-avoid-softinput";\n\nAvoidSoftInput.setAvoidOffset(40); // It will result in applied value 40dp greater than standard one\n'})}),"\n",(0,o.jsx)(t.admonition,{type:"info",children:(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"Value applied to that method is persisted, so if you want to use that in a single use case, remember to clear it (just pass 0 as an argument)"})})})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>d});var o=s(6540);const i={},n=o.createContext(i);function a(e){const t=o.useContext(n);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(n.Provider,{value:t},e.children)}}}]);