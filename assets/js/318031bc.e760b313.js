"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9166],{4652:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var n=o(4848),i=o(8453);const s={id:"recipes-bottom-sheet",title:"Bottom sheet recipe",sidebar_label:"Bottom sheet"},a=void 0,r={id:"recipes/recipes-bottom-sheet",title:"Bottom sheet recipe",description:"Depending on bottom sheet implementation in your project, you should use either AvoidSoftInput module or AvoidSoftInputView component.",source:"@site/versioned_docs/version-2.0.x/recipes/BOTTOM_SHEET.mdx",sourceDirName:"recipes",slug:"/recipes/recipes-bottom-sheet",permalink:"/react-native-avoid-softinput/docs/2.0.x/recipes/recipes-bottom-sheet",draft:!1,unlisted:!1,editUrl:"https://github.com/mateusz1913/react-native-avoid-softinput/tree/main/docs/versioned_docs/version-2.0.x/recipes/BOTTOM_SHEET.mdx",tags:[],version:"2.0.x",frontMatter:{id:"recipes-bottom-sheet",title:"Bottom sheet recipe",sidebar_label:"Bottom sheet"},sidebar:"docsSidebar",previous:{title:"Modal",permalink:"/react-native-avoid-softinput/docs/2.0.x/recipes/recipes-modal"},next:{title:"Sticky footer",permalink:"/react-native-avoid-softinput/docs/2.0.x/recipes/recipes-sticky-footer"}},c={},d=[{value:"Example (bottom sheet without modal implementation)",id:"example-bottom-sheet-without-modal-implementation",level:3},{value:"Example (bottom sheet with modal implementation)",id:"example-bottom-sheet-with-modal-implementation",level:3}];function l(e){const t={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["Depending on bottom sheet implementation in your project, you should use either ",(0,n.jsx)(t.code,{children:"AvoidSoftInput"})," module or ",(0,n.jsx)(t.code,{children:"AvoidSoftInputView"})," component."]}),"\n",(0,n.jsxs)(t.p,{children:["If your bottom sheet implementation uses React Native ",(0,n.jsx)(t.code,{children:"Modal"})," component, you should use ",(0,n.jsx)(t.code,{children:"AvoidSoftInputView"})," component (",(0,n.jsx)(t.a,{href:"recipes-modal",children:"check Modal recipe"}),"). Otherwise use ",(0,n.jsx)(t.code,{children:"AvoidSoftInput"})," module (",(0,n.jsx)(t.a,{href:"recipes-form",children:"check Form recipe"}),")."]}),"\n",(0,n.jsx)(t.h3,{id:"example-bottom-sheet-without-modal-implementation",children:"Example (bottom sheet without modal implementation)"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-tsx",children:"export const BottomSheetExample: React.FC = () => {\n  /**\n   * If you use react-navigation and want to enable module only in specific screen,\n   * you can call it in react-navigation `useFocusEffect` callback\n   *\n   * If you want to have module always enabled,\n   * just call it inside `useEffect` in your root component\n   *\n   * ```\n   * useEffect(() => {\n   *   AvoidSoftInput.setAdjustNothing(); // <---- Set windowSoftInputMode on Android to match iOS behavior\n   *   AvoidSoftInput.setEnabled(true); // <---- Enable module\n   * }, [])\n   * ```\n   */\n  const onFocusEffect = useCallback(() => {\n    AvoidSoftInput.setAdjustNothing(); // <---- Set windowSoftInputMode on Android to match iOS behavior\n    AvoidSoftInput.setEnabled(true); // <---- Enable module\n    AvoidSoftInput.setAvoidOffset(50); // <---- if you have CTA button at the bottom of the screen, set additional offset to make button also visible\n\n    return () => {\n      AvoidSoftInput.setAvoidOffset(0);\n      AvoidSoftInput.setEnabled(false);\n      AvoidSoftInput.setDefaultAppSoftInputMode();\n    };\n  }, []);\n\n  useFocusEffect(onFocusEffect);\n\n  // Sample bottom sheet\n  return (\n    <SafeAreaView>\n      // ... some JSX\n      <BottomSheetComponent>\n        <SafeAreaView>\n          <Text>Header</Text>\n          <TextInput />\n          <View>\n            <Button />\n          </View>\n        </SafeAreaView>\n      </BottomSheetComponent>\n    </SafeAreaView>\n  );\n};\n"})}),"\n",(0,n.jsx)(t.h3,{id:"example-bottom-sheet-with-modal-implementation",children:"Example (bottom sheet with modal implementation)"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"export const ModalBottomSheetExample: React.FC = () => {\n  // Sample modal bottom sheet\n  return (\n    // ... some JSX\n    <ModalBottomSheetComponent>\n      <SafeAreaView>\n        {/** if you have CTA button at the bottom of the screen, set additional offset to make button also visible */}\n        <AvoidSoftInputView avoidOffset={50}>\n          <Text>Header</Text>\n          <TextInput />\n          <View>\n            <Button />\n          </View>\n        </AvoidSoftInputView>\n      </SafeAreaView>\n    </ModalBottomSheetComponent>\n    // ... some JSX\n  );\n};\n"})})]})}function m(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>a,x:()=>r});var n=o(6540);const i={},s=n.createContext(i);function a(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);