"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9988],{1181:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>s,contentTitle:()=>d,default:()=>v,frontMatter:()=>n,metadata:()=>a,toc:()=>c});var i=o(4848),r=o(8453);const n={id:"migration_from_v6_to_v7",title:"Migration from v6 to v7",sidebar_label:"Migration from v6 to v7",keywords:["react-native-avoid-softinput","migration"]},d=void 0,a={id:"guides/migration_from_v6_to_v7",title:"Migration from v6 to v7",description:'Migrate to react-native-edge-to-edge to provide best support for Android 15 "edge to edge" mode',source:"@site/docs/guides/MIGRATION_FROM_V6_TO_V7.mdx",sourceDirName:"guides",slug:"/guides/migration_from_v6_to_v7",permalink:"/react-native-avoid-softinput/docs/next/guides/migration_from_v6_to_v7",draft:!1,unlisted:!1,editUrl:"https://github.com/mateusz1913/react-native-avoid-softinput/tree/main/docs/docs/guides/MIGRATION_FROM_V6_TO_V7.mdx",tags:[],version:"current",frontMatter:{id:"migration_from_v6_to_v7",title:"Migration from v6 to v7",sidebar_label:"Migration from v6 to v7",keywords:["react-native-avoid-softinput","migration"]},sidebar:"docsSidebar",previous:{title:"Getting Started",permalink:"/react-native-avoid-softinput/docs/next/guides"},next:{title:"Usage - module",permalink:"/react-native-avoid-softinput/docs/next/guides/usage-module"}},s={},c=[{value:"Migrate to <code>react-native-edge-to-edge</code> to provide best support for Android 15 &quot;edge to edge&quot; mode",id:"migrate-to-react-native-edge-to-edge-to-provide-best-support-for-android-15-edge-to-edge-mode",level:2}];function u(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.h2,{id:"migrate-to-react-native-edge-to-edge-to-provide-best-support-for-android-15-edge-to-edge-mode",children:["Migrate to ",(0,i.jsx)(t.a,{href:"https://github.com/zoontek/react-native-edge-to-edge",children:(0,i.jsx)(t.code,{children:"react-native-edge-to-edge"})}),' to provide best support for Android 15 "edge to edge" mode']}),"\n",(0,i.jsxs)(t.p,{children:["Since v7, the library supports detection of ",(0,i.jsx)(t.code,{children:"react-native-edge-to-edge"}),".\nFollow the ",(0,i.jsx)(t.a,{href:"/react-native-avoid-softinput/docs/next/guides",children:"installation page"})," for the recommended setup for keyboard handling on Android.\nExisting ",(0,i.jsx)(t.code,{children:"AvoidSoftInput.setShouldMimicIOSBehavior"})," function is considered deprecated from v7 and will be removed in future major versions."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-diff",children:"useEffect(() => {\n-  AvoidSoftInput.setShouldMimicIOSBehavior(true); // <---- Tell Android that library will handle keyboard insets manually to match iOS behavior\n  AvoidSoftInput.setEnabled(true); // <---- Enable module\n}, []);\n"})})]})}function v(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>d,x:()=>a});var i=o(6540);const r={},n=i.createContext(r);function d(e){const t=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),i.createElement(n.Provider,{value:t},e.children)}}}]);