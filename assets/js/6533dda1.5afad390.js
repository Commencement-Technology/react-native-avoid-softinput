"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4570],{3905:function(t,e,n){n.d(e,{Zo:function(){return s},kt:function(){return d}});var o=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function u(t,e){if(null==t)return{};var n,o,r=function(t,e){if(null==t)return{};var n,o,r={},i=Object.keys(t);for(o=0;o<i.length;o++)n=i[o],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(o=0;o<i.length;o++)n=i[o],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var p=o.createContext({}),l=function(t){var e=o.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},s=function(t){var e=l(t.components);return o.createElement(p.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return o.createElement(o.Fragment,{},e)}},f=o.forwardRef((function(t,e){var n=t.components,r=t.mdxType,i=t.originalType,p=t.parentName,s=u(t,["components","mdxType","originalType","parentName"]),f=l(n),d=r,m=f["".concat(p,".").concat(d)]||f[d]||c[d]||i;return n?o.createElement(m,a(a({ref:e},s),{},{components:n})):o.createElement(m,a({ref:e},s))}));function d(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=n.length,a=new Array(i);a[0]=f;var u={};for(var p in e)hasOwnProperty.call(e,p)&&(u[p]=e[p]);u.originalType=t,u.mdxType="string"==typeof t?t:r,a[1]=u;for(var l=2;l<i;l++)a[l]=n[l];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}f.displayName="MDXCreateElement"},1580:function(t,e,n){n.r(e),n.d(e,{assets:function(){return p},contentTitle:function(){return a},default:function(){return c},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return l}});var o=n(3117),r=(n(7294),n(3905));const i={id:"on-soft-input-shown",title:"onSoftInputShown",sidebar_label:"onSoftInputShown"},a=void 0,u={unversionedId:"api/module/on-soft-input-shown",id:"version-3.0.x/api/module/on-soft-input-shown",title:"onSoftInputShown",description:"Use onSoftInputShown method, if you want to listen to events when soft input is shown.",source:"@site/versioned_docs/version-3.0.x/api/module/ON_SOFT_INPUT_SHOWN.mdx",sourceDirName:"api/module",slug:"/api/module/on-soft-input-shown",permalink:"/react-native-avoid-softinput/docs/api/module/on-soft-input-shown",draft:!1,editUrl:"https://github.com/mateusz1913/react-native-avoid-softinput/tree/main/docs/versioned_docs/version-3.0.x/api/module/ON_SOFT_INPUT_SHOWN.mdx",tags:[],version:"3.0.x",frontMatter:{id:"on-soft-input-shown",title:"onSoftInputShown",sidebar_label:"onSoftInputShown"},sidebar:"docsSidebar",previous:{title:"setShowAnimationDuration",permalink:"/react-native-avoid-softinput/docs/api/module/set-show-animation-duration"},next:{title:"onSoftInputHidden",permalink:"/react-native-avoid-softinput/docs/api/module/on-soft-input-hidden"}},p={},l=[{value:"Parameters",id:"parameters",level:3},{value:"Example",id:"example",level:3}],s={toc:l};function c(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,o.Z)({},s,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"onSoftInputShown")," method, if you want to listen to events when soft input is shown."),(0,r.kt)("h3",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"({ softInputHeight }: { softInputHeight: number }) => void"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"function called with current soft input height when soft input is displayed")))),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import { AvoidSoftInput } from "react-native-avoid-softinput";\n\nconst unsubscribe = AvoidSoftInput.onSoftInputShown(({ softInputHeight }) => {\n  // Do sth\n});\n\n// later invoke unsubscribe.remove()\n')))}c.isMDXComponent=!0}}]);