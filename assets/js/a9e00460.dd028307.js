"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7256],{628:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var i=t(4848),d=t(8453);const o={id:"view",title:"AvoidSoftInputView",sidebar_label:"AvoidSoftInputView",keywords:["react-native-avoid-softinput","AvoidSoftInputView","view"]},r=void 0,s={id:"api/view/view",title:"AvoidSoftInputView",description:"Wrap your content inside AvoidSoftInputView, if your form is rendered inside modal or you don't want to apply padding, or translation to React root view.",source:"@site/versioned_docs/version-3.0.x/api/view/VIEW.mdx",sourceDirName:"api/view",slug:"/api/view/",permalink:"/react-native-avoid-softinput/docs/3.0.x/api/view/",draft:!1,unlisted:!1,editUrl:"https://github.com/mateusz1913/react-native-avoid-softinput/tree/main/docs/versioned_docs/version-3.0.x/api/view/VIEW.mdx",tags:[],version:"3.0.x",frontMatter:{id:"view",title:"AvoidSoftInputView",sidebar_label:"AvoidSoftInputView",keywords:["react-native-avoid-softinput","AvoidSoftInputView","view"]},sidebar:"docsSidebar",previous:{title:"setDefaultAppSoftInputMode",permalink:"/react-native-avoid-softinput/docs/3.0.x/api/module/set-default-app-soft-input-mode"},next:{title:"useSoftInputHidden",permalink:"/react-native-avoid-softinput/docs/3.0.x/api/hooks/use-soft-input-hidden"}},c={},l=[{value:"Props",id:"props",level:3},{value:"Example",id:"example",level:3}];function a(e){const n={code:"code",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Wrap your content inside ",(0,i.jsx)(n.code,{children:"AvoidSoftInputView"}),", if your form is rendered inside modal or you don't want to apply padding, or translation to React root view."]}),"\n",(0,i.jsx)(n.h3,{id:"props",children:"Props"}),"\n",(0,i.jsxs)(n.p,{children:["Extends ",(0,i.jsx)(n.code,{children:"View"})," props"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Prop"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Default value"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"avoidOffset"})}),(0,i.jsx)(n.td,{children:"number"}),(0,i.jsx)(n.td,{children:"0"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"easing"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"easeIn"})," or ",(0,i.jsx)(n.code,{children:"easeInOut"})," or ",(0,i.jsx)(n.code,{children:"easeOut"})," or ",(0,i.jsx)(n.code,{children:"linear"})]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"linear"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"enabled"})}),(0,i.jsx)(n.td,{children:"boolean"}),(0,i.jsx)(n.td,{children:"true"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"hideAnimationDelay"})}),(0,i.jsx)(n.td,{children:"number"}),(0,i.jsx)(n.td,{children:"0"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"hideAnimationDuration"})}),(0,i.jsx)(n.td,{children:"number"}),(0,i.jsx)(n.td,{children:"220"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"onSoftInputAppliedOffsetChange"})}),(0,i.jsx)(n.td,{children:"function(e: { nativeEvent: { appliedOffset: number }})"}),(0,i.jsx)(n.td,{children:"undefined"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"onSoftInputHeightChange"})}),(0,i.jsx)(n.td,{children:"function(e: { nativeEvent: { softInputHeight: number }})"}),(0,i.jsx)(n.td,{children:"undefined"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"onSoftInputHidden"})}),(0,i.jsx)(n.td,{children:"function(e: { nativeEvent: { softInputHeight: number }})"}),(0,i.jsx)(n.td,{children:"undefined"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"onSoftInputShown"})}),(0,i.jsx)(n.td,{children:"function(e: { nativeEvent: { softInputHeight: number }})"}),(0,i.jsx)(n.td,{children:"undefined"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"showAnimationDelay"})}),(0,i.jsx)(n.td,{children:"number"}),(0,i.jsx)(n.td,{children:"300/0 (iOS/Android)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"showAnimationDuration"})}),(0,i.jsx)(n.td,{children:"number"}),(0,i.jsx)(n.td,{children:"660"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'import { AvoidSoftInputView } from "react-native-avoid-softinput";\n\n<AvoidSoftInputView\n  avoidOffset={10}\n  easing="easeIn"\n  enabled={true}\n  hideAnimationDelay={100}\n  hideAnimationDuration={300}\n  onSoftInputShown={onSoftInputShown}\n  onSoftInputHidden={onSoftInputHidden}\n  onSoftInputHeightChange={onSoftInputHeightChange}\n  showAnimationDelay={100}\n  showAnimationDuration={800}\n  style={styles.avoidSoftInputView}\n>\n  {/** Content that should be pushed above the keyboard */}\n</AvoidSoftInputView>;\n'})})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var i=t(6540);const d={},o=i.createContext(d);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);