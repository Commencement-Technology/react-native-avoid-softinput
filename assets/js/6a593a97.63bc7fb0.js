"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[769],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),f=p(n),d=o,m=f["".concat(s,".").concat(d)]||f[d]||l[d]||a;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u.mdxType="string"==typeof e?e:o,i[1]=u;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},2678:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return u},metadata:function(){return p},toc:function(){return l}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],u={id:"use-soft-input-state",title:"useSoftInputState",sidebar_label:"useSoftInputState"},s=void 0,p={unversionedId:"api/hooks/use-soft-input-state",id:"api/hooks/use-soft-input-state",title:"useSoftInputState",description:"useSoftInputState returns object with properties determining whether soft input is shown and how much screen it covers.",source:"@site/docs/api/hooks/USE_SOFT_INPUT_STATE.mdx",sourceDirName:"api/hooks",slug:"/api/hooks/use-soft-input-state",permalink:"/react-native-avoid-softinput/docs/api/hooks/use-soft-input-state",editUrl:"https://github.com/mateusz1913/react-native-avoid-softinput/tree/main/docs/docs/api/hooks/USE_SOFT_INPUT_STATE.mdx",tags:[],version:"current",frontMatter:{id:"use-soft-input-state",title:"useSoftInputState",sidebar_label:"useSoftInputState"},sidebar:"docsSidebar",previous:{title:"useSoftInputAppliedOffsetChanged",permalink:"/react-native-avoid-softinput/docs/api/hooks/use-soft-input-applied-offset-changed"}},c={},l=[{value:"Return value",id:"return-value",level:3},{value:"Example",id:"example",level:3}],f={toc:l};function d(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"useSoftInputState")," returns object with properties determining whether soft input is shown and how much screen it covers."),(0,a.kt)("h3",{id:"return-value"},"Return value"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"{ isSoftInputShown: boolean, softInputHeight: number }\n")),(0,a.kt)("h3",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { useSoftInputState } from "react-native-avoid-softinput";\n\nconst { isSoftInputShown, softInputHeight } = useSoftInputState();\n')))}d.isMDXComponent=!0}}]);