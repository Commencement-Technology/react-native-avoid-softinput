"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4629],{1891:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>d,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>r});var s=n(4848),i=n(8453);const o={id:"use-soft-input-applied-offset-changed",title:"useSoftInputAppliedOffsetChanged",sidebar_label:"useSoftInputAppliedOffsetChanged"},d=void 0,a={id:"api/hooks/use-soft-input-applied-offset-changed",title:"useSoftInputAppliedOffsetChanged",description:"useSoftInputAppliedOffsetChanged is a shortcut for using AvoidSoftInput.onSoftInputAppliedOffsetChange method inside useEffect.",source:"@site/versioned_docs/version-2.0.x/api/hooks/USE_SOFT_INPUT_APPLIED_OFFSET_CHANGED.mdx",sourceDirName:"api/hooks",slug:"/api/hooks/use-soft-input-applied-offset-changed",permalink:"/react-native-avoid-softinput/docs/2.0.x/api/hooks/use-soft-input-applied-offset-changed",draft:!1,unlisted:!1,editUrl:"https://github.com/mateusz1913/react-native-avoid-softinput/tree/main/docs/versioned_docs/version-2.0.x/api/hooks/USE_SOFT_INPUT_APPLIED_OFFSET_CHANGED.mdx",tags:[],version:"2.0.x",frontMatter:{id:"use-soft-input-applied-offset-changed",title:"useSoftInputAppliedOffsetChanged",sidebar_label:"useSoftInputAppliedOffsetChanged"},sidebar:"docsSidebar",previous:{title:"useSoftInputHeightChanged",permalink:"/react-native-avoid-softinput/docs/2.0.x/api/hooks/use-soft-input-height-changed"},next:{title:"useSoftInputState",permalink:"/react-native-avoid-softinput/docs/2.0.x/api/hooks/use-soft-input-state"}},p={},r=[{value:"Parameters",id:"parameters",level:3},{value:"Example",id:"example",level:3}];function f(e){const t={code:"code",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"useSoftInputAppliedOffsetChanged"})," is a shortcut for using ",(0,s.jsx)(t.code,{children:"AvoidSoftInput.onSoftInputAppliedOffsetChange"})," method inside ",(0,s.jsx)(t.code,{children:"useEffect"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Required"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"({ appliedOffset }: { appliedOffset: number }) => void"}),(0,s.jsx)(t.td,{children:"yes"}),(0,s.jsx)(t.td,{children:"function called during applying padding or translation with current applied value"})]})})]}),"\n",(0,s.jsx)(t.h3,{id:"example",children:"Example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:'import { useSoftInputAppliedOffsetChanged } from "react-native-avoid-softinput";\n\nuseSoftInputAppliedOffsetChanged(({ appliedOffset }) => {\n  // Do sth\n});\n'})})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(f,{...e})}):f(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>a});var s=n(6540);const i={},o=s.createContext(i);function d(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);