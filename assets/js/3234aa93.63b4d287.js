"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5323],{3467:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>c,toc:()=>u});var o=t(4848),i=t(8453);const s={id:"recipes-custom-config",title:"Custom config recipe",sidebar_label:"Custom config"},a=void 0,c={id:"recipes/recipes-custom-config",title:"Custom config recipe",description:"Applied offset animation can be configured both when using AvoidSoftInput module and AvoidSoftInputView component.",source:"@site/versioned_docs/version-2.0.x/recipes/CUSTOM_CONFIG.mdx",sourceDirName:"recipes",slug:"/recipes/recipes-custom-config",permalink:"/react-native-avoid-softinput/docs/2.0.x/recipes/recipes-custom-config",draft:!1,unlisted:!1,editUrl:"https://github.com/mateusz1913/react-native-avoid-softinput/tree/main/docs/versioned_docs/version-2.0.x/recipes/CUSTOM_CONFIG.mdx",tags:[],version:"2.0.x",frontMatter:{id:"recipes-custom-config",title:"Custom config recipe",sidebar_label:"Custom config"},sidebar:"docsSidebar",previous:{title:"Animations",permalink:"/react-native-avoid-softinput/docs/2.0.x/recipes/recipes-animations"},next:{title:"setEnabled",permalink:"/react-native-avoid-softinput/docs/2.0.x/api/module/set-enabled"}},d={},u=[{value:"Example - module",id:"example---module",level:3},{value:"Example - view",id:"example---view",level:3}];function r(e){const n={code:"code",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["Applied offset animation can be configured both when using ",(0,o.jsx)(n.code,{children:"AvoidSoftInput"})," module and ",(0,o.jsx)(n.code,{children:"AvoidSoftInputView"})," component."]}),"\n",(0,o.jsx)(n.h3,{id:"example---module",children:"Example - module"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'export const CustomAnimationConfigModuleExample: React.FC = () => {\n  const onFocusEffect = useCallback(() => {\n    AvoidSoftInput.setAdjustNothing();\n    AvoidSoftInput.setEnabled(true);\n\n    /** Customize animation delay, duration & easing */\n    AvoidSoftInput.setEasing("easeOut");\n    AvoidSoftInput.setHideAnimationDelay(1000);\n    AvoidSoftInput.setHideAnimationDuration(600);\n    AvoidSoftInput.setShowAnimationDelay(1000);\n    AvoidSoftInput.setShowAnimationDuration(1200);\n    return () => {\n      /** Rest to default values */\n      AvoidSoftInput.setEasing("linear");\n      AvoidSoftInput.setHideAnimationDelay();\n      AvoidSoftInput.setHideAnimationDuration();\n      AvoidSoftInput.setShowAnimationDelay();\n      AvoidSoftInput.setShowAnimationDuration();\n      AvoidSoftInput.setEnabled(false);\n      AvoidSoftInput.setDefaultAppSoftInputMode();\n    };\n  }, []);\n\n  useFocusEffect(onFocusEffect);\n\n  // ...\n};\n'})}),"\n",(0,o.jsx)(n.h3,{id:"example---view",children:"Example - view"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:'export const CustomAnimationConfigViewExample: React.FC = () => {\n  // ...\n\n  return (\n    <SafeAreaView>\n      {/** Customize animation delay, duration & easing */}\n      <AvoidSoftInputView\n        easing="easeOut"\n        hideAnimationDelay={1000}\n        hideAnimationDuration={600}\n        showAnimationDelay={1000}\n        showAnimationDuration={1200}\n      >\n        // ...\n        <TextInput />\n        // ...\n      </AvoidSoftInputView>\n    </SafeAreaView>\n  );\n};\n'})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(r,{...e})}):r(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var o=t(6540);const i={},s=o.createContext(i);function a(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);