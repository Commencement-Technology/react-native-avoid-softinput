"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6828],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=o.createContext({}),c=function(e){var t=o.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(u.Provider,{value:t},e.children)},d="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},l=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),l=r,m=d["".concat(u,".").concat(l)]||d[l]||f[l]||i;return n?o.createElement(m,a(a({ref:t},p),{},{components:n})):o.createElement(m,a({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=l;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s[d]="string"==typeof e?e:r,a[1]=s;for(var c=2;c<i;c++)a[c]=n[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}l.displayName="MDXCreateElement"},3149:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var o=n(7462),r=(n(7294),n(3905));const i={id:"usage-view",title:"Usage - view",sidebar_label:"Usage - view"},a=void 0,s={unversionedId:"guides/usage-view",id:"guides/usage-view",title:"Usage - view",description:"",source:"@site/docs/guides/USAGE_VIEW.mdx",sourceDirName:"guides",slug:"/guides/usage-view",permalink:"/react-native-avoid-softinput/docs/next/guides/usage-view",draft:!1,editUrl:"https://github.com/mateusz1913/react-native-avoid-softinput/tree/main/docs/docs/guides/USAGE_VIEW.mdx",tags:[],version:"current",frontMatter:{id:"usage-view",title:"Usage - view",sidebar_label:"Usage - view"},sidebar:"docsSidebar",previous:{title:"Usage - module",permalink:"/react-native-avoid-softinput/docs/next/guides/usage-module"},next:{title:"Jest mock usage",permalink:"/react-native-avoid-softinput/docs/next/guides/jest-mock-usage"}},u={},c=[],p={toc:c};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import * as React from "react";\nimport { AvoidSoftInputView } from "react-native-avoid-softinput";\n\n/**\n * If you want to use `AvoidSoftInputView` on Android,\n * remember to call `setShouldMimicIOSBehavior(true)` somewhere in the root component\n * or inside `useFocusEffect` callback, if you use react-navigation and want to use\n * `AvoidSoftInputView` only on specific screen\n * \n * ```ts\n * React.useEffect(() => {\n *   AvoidSoftInput.setShouldMimicIOSBehavior(true);\n * }, []);\n * ```\n */\n\nconst MyComponent = () => {\n  function onSoftInputShown(e) {\n    // Do sth\n  }\n  function onSoftInputHidden() {\n    // Do sth\n  }\n  function onSoftInputHeightChange(e) {\n    // Do sth\n  }\n  function onSoftInputAppliedOffsetChange(e) {\n    // Do sth\n  }\n  return (\n    <AvoidSoftInputView\n      avoidOffset={10}\n      easing="easeIn"\n      hideAnimationDelay={100}\n      hideAnimationDuration={300}\n      onSoftInputShown={onSoftInputShown}\n      onSoftInputHidden={onSoftInputHidden}\n      onSoftInputHeightChange={onSoftInputHeightChange}\n      showAnimationDelay={100}\n      showAnimationDuration={800}\n      style={styles.avoidSoftInputView}\n    >\n      {/** Content that should be pushed above the keyboard */}\n    </AvoidSoftInputView>\n  );\n};\n')))}d.isMDXComponent=!0}}]);