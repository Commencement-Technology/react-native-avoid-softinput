"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[560],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),d=l(n),f=o,m=d["".concat(s,".").concat(f)]||d[f]||p[f]||a;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u[d]="string"==typeof e?e:o,i[1]=u;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},778:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>u,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const a={id:"usage-module",title:"Usage - module",sidebar_label:"Usage - module",keywords:["react-native-avoid-softinput","module","usage"]},i=void 0,u={unversionedId:"guides/usage-module",id:"guides/usage-module",title:"Usage - module",description:"The preferrable usage of the module is to enable it where it's actually needed.",source:"@site/docs/guides/USAGE_MODULE.mdx",sourceDirName:"guides",slug:"/guides/usage-module",permalink:"/react-native-avoid-softinput/docs/next/guides/usage-module",draft:!1,editUrl:"https://github.com/mateusz1913/react-native-avoid-softinput/tree/main/docs/docs/guides/USAGE_MODULE.mdx",tags:[],version:"current",frontMatter:{id:"usage-module",title:"Usage - module",sidebar_label:"Usage - module",keywords:["react-native-avoid-softinput","module","usage"]},sidebar:"docsSidebar",previous:{title:"Migration from 2.x.x",permalink:"/react-native-avoid-softinput/docs/next/guides/migration_from_2_x_x"},next:{title:"Usage - view",permalink:"/react-native-avoid-softinput/docs/next/guides/usage-view"}},s={},l=[],c={toc:l};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The preferrable usage of the module is to enable it where it's actually needed."),(0,o.kt)("p",null,"Depending on the navigation setup you have, check the navigation's library documentation for correct way to run some actions when the screen gains/loses focus."),(0,o.kt)("p",null,"The following example assumes ",(0,o.kt)("inlineCode",{parentName:"p"},"react-navigation")," is used as a navigation:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import * as React from "react";\nimport { Button, ScrollView, TextInput, View } from "react-native";\nimport { AvoidSoftInput } from "react-native-avoid-softinput";\nimport { useFocusEffect } from "@react-navigation/native";\n\nexport const FormExample: React.FC = () => {\n// highlight-start\n  const onFocusEffect = React.useCallback(() => {\n    // This should be run when screen gains focus - enable the module where it\'s needed\n    AvoidSoftInput.setShouldMimicIOSBehavior(true);\n    AvoidSoftInput.setEnabled(true);\n    return () => {\n      // This should be run when screen loses focus - disable the module where it\'s not needed, to make a cleanup\n      AvoidSoftInput.setEnabled(false);\n      AvoidSoftInput.setShouldMimicIOSBehavior(false);\n    };\n  }, []);\n\n  useFocusEffect(onFocusEffect); // register callback to focus events\n// highlight-end\n\n  return <ScrollView>\n    <View>\n      <TextInput placeholder="Single line input" />\n      <TextInput placeholder="Multiline input" />\n      <TextInput placeholder="Large multiline input" />\n    </View>\n    <View>\n      <Button\n        onPress={NOOP}\n        title="Submit"\n      />\n    </View>\n  </ScrollView>;\n};\n')))}d.isMDXComponent=!0}}]);